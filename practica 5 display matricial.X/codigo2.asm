;INSTITUTO POLITECNICO NACIONAL
;CECYT 9 "JUAN DE DIOS BATIZ"
;PRACTICA 4
;Teoria de operacion del Display Matricial. 
;GRUPO: 6IM2  EQUIPO:1
;INTEGRANTES:
;Vargas Espino Carlos Hassan
;Perez Jimenez Madelin Fernanda
;COMENTARIO DE LO QUE EL PROGRAMA EJECUTARA:Este programa realizara un desplegado de imagenes en el
;display maricial de 7x5. 
LIST P=16F877A;

 ;#INCLUDE "C:\PROGRAM FILES (X86)\MICROCHIP\MPASM SUITE\P16F877A.INC";
 #INCLUDE "C:\PROGRAM FILES\MICROCHIP\MPASM SUITE\P16F877A.INC";
 __CONFIG _XT_OSC & _WDT_OFF & _PWRTE_ON & _BODEN_OFF & _LVP_OFF & _CP_OFF;


;== VARIABLES ==

W_TEMP 		EQU 0X20;
STATUS_TEMP EQU 0X21;
PCLATH_TEMP EQU 0X22;
FSR_TEMP 	EQU 0X23;

PRESC_1 	EQU 0X24;
PRESC_2 	EQU 0X25;

CONT_MILIS 	EQU 0X26;
CONT_SEG	EQU 0X27;

VECES		EQU 0X28;

;== CONSTANTES ==

C0			EQU 0X01;
C1			EQU 0X02;
C2			EQU 0X04;
C3			EQU 0X08;
C4			EQU 0X10;

;== ASIGNACION DE PUERTOS ==

;PUERTO A.
SIN_USORA0 	EQU .0; // SIN USORA0.
SIN_USORA1 	EQU .1; // SIN USORA1.
SIN_USORA2 	EQU .2; // SIN USORA2.
SIN_USORA3 	EQU .3; // SIN USORA3.
SIN_USORA4 	EQU .4; // SIN USORA4.
SIN_USORA5 	EQU .5; // SIN USORA5.

PROGA EQU B'111111'; //PROGRAMACION INICIAL DEL PUERTO A.

;PUERTO B.
COL_0		EQU .0;// COLUMNA 0.
COL_1		EQU .1;// COLUMNA 1.
COL_2		EQU .2;// COLUMNA 2.
COL_3		EQU .3;// COLUMNA 3.
COL_4		EQU .4;// COLUMNA 4.
SIN_USORB5	EQU .5;// SIN USORB5.
SIN_USORB6	EQU .6;// SIN USORB6.
SIN_USORB7	EQU .7;// SIN USORB7.

PROGB EQU B'11100000'; //PROGRAMACION INICIAL DEL PUERTO B.

;PUERTO C.
REN_0 		EQU .0; // RENGLON 0.
REN_1	 	EQU .1; // RENGLON 1.
REN_2	 	EQU .2; // RENGLON 2.
REN_3	 	EQU .3; // RENGLON 3.
REN_4	 	EQU .4; // RENGLON 4.
REN_5	 	EQU .5; // RENGLON 5.
REN_6	 	EQU .6; // RENGLON 6.
SIN_USORC7 	EQU .7; // SIN USORC7.

PROGC EQU B'10000000'; //PROGRAMACION INICIAL DEL PUERTO C.

SIN_USORD0 	EQU .0; // SIN USORD0.
SIN_USORD1 	EQU .1; // SIN USORD1.
SIN_USORD2 	EQU .2; // SIN USORD2.
SIN_USORD3 	EQU .3; // SIN USORD3.
SIN_USORD4 	EQU .4; // SIN USORD4.
SIN_USORD5 	EQU .5; // SIN USORD5.
SIN_USORD6 	EQU .6; // SIN USORD6.
SIN_USORD7 	EQU .7; // SIN USORD7.

PROGD EQU B'11111111'; //PROGRAMACION INICIAL DEL PUERTO B.

;PUERTO E.

SIN_USORE0 	EQU .0; // SIN USORE0.
SIN_USORE1 	EQU .1; // SIN USORE1.
SIN_USORE2 	EQU .2; // SIN USORE2.

PROGE EQU B'111'; //PROGRMACION INICIAL DEL PUERTO E.

;== VECTOR RESET ==

VEC_RESET 	ORG 0X0000;
			CLRF PCLATH;
			GOTO PROG_PRIN;

;== VECTOR INTERRUPCION ==

VEC_INT	ORG 0X0004;
		MOVWF W_TEMP;

		MOVF STATUS,W;
		MOVWF STATUS_TEMP;
		CLRF STATUS;

		MOVF PCLATH,W;
		MOVWF PCLATH_TEMP;
		CLRF PCLATH;

		MOVF FSR,W;
		MOVWF FSR_TEMP;

		BTFSC INTCON,T0IF;
		CALL RUTINA_INT;

SAL_INT MOVLW .131;
		MOVWF TMR0;

		MOVF FSR_TEMP,W;
		MOVWF FSR;

		MOVF PCLATH_TEMP,W;
		MOVWF PCLATH;

		MOVF STATUS_TEMP,W;
		MOVWF STATUS;

		RETFIE;

;== INTERRUPCION ==

RUTINA_INT 	INCF CONT_MILIS,F;
			INCF PRESC_1,F;

			MOVLW .100;
			XORWF PRESC_1,W;
			BTFSC STATUS,Z;
			GOTO SIG_INT;
			GOTO SAL_RUTINT;

SIG_INT 	CLRF PRESC_1;
			INCF PRESC_2,F;
			MOVLW .10;
			XORWF PRESC_2,W;
			BTFSS STATUS,Z;
			GOTO SAL_RUTINT;
			CLRF PRESC_1;
			CLRF PRESC_2;
			INCF CONT_SEG,F;

SAL_RUTINT 	BCF INTCON,T0IF;

			RETURN;

;== INICIO ==

PROG_INI 	BSF STATUS,RP0; BANCO 1 DE RAM.

			MOVLW 0X02;
			MOVWF OPTION_REG ^0X80;

			MOVLW PROGA;
			MOVWF TRISA ^0X80;

			MOVLW PROGB;
			MOVWF TRISB ^0X80;

			MOVLW PROGC;
			MOVWF TRISC ^0X80;

			MOVLW PROGD;
			MOVWF TRISD ^0X80;

			MOVLW PROGE;
			MOVWF TRISE ^0X80;

			BCF STATUS,RP0; BANCO 0 DE RAM.

			MOVLW .131;
			MOVWF TMR0;
			
			MOVLW 0XA0;
			MOVWF INTCON;
			
			CLRF PORTB;
			CLRF PORTC;
		
			RETURN;

;== TIEMPOS ==

retardo		CLRF CONT_MILIS;
esp_time 	MOVLW .3;
				XORWF CONT_MILIS,W;
				BTFSS STATUS,Z;
				GOTO esp_time;
				RETURN;
				

;== PROGRAMA PRINCIPAL ==

PROG_PRIN 	CALL PROG_INI;
			
LOOP_PRIN	NOP;
			CALL CARACTERES;
			CALL POS12;
			CALL POS13;
			GOTO LOOP_PRIN;
	
POS12		CLRF VECES;
T8			CALL POSI12;
			MOVLW .5;
			XORWF VECES,W;
			BTFSS STATUS,Z;
			GOTO T8;
			RETURN;			
POSI12		CLRF CONT_SEG;
T6			CALL POS_1;
			MOVLW .1;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T6;
			CLRF CONT_SEG;
T7			CALL POS_2;
			MOVLW .1;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T7
			INCF VECES,F;
			RETURN;

POS13		CLRF VECES;
T9			CALL POSI13;
			MOVLW .5;
			XORWF VECES,W;
			BTFSS STATUS,Z;
			GOTO T9;
			RETURN;			
POSI13		CLRF CONT_SEG;
T10			CALL POS_1;
			MOVLW .1;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T10;
			CLRF CONT_SEG;
T11			CALL POS_3;
			MOVLW .1;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T11;
			INCF VECES,F;
			RETURN;

			

CARACTERES	CLRF CONT_SEG;
T1			CALL CAR_U;
			MOVLW .5;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T1;
			CLRF CONT_SEG;
T2			CALL CAR_V;
			MOVLW .5;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T2;
			CLRF CONT_SEG;
T3			CALL CAR_W;
			MOVLW .5;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T3;
			CLRF CONT_SEG;
T4			CALL CAR_X;
			MOVLW .5;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T4;
			CLRF CONT_SEG;
T5			CALL CAR_Y;
			MOVLW .5;
			XORWF CONT_SEG,W;
			BTFSS STATUS,Z;
			GOTO T5;
			RETURN;

CAR_U			CLRF PORTB;

			MOVLW 0XC0;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XBF;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XBF;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XBF;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XC0;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;

CAR_W		CLRF PORTB;
			
			MOVLW 0XC0;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XBF;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XC7;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XBF;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XC0;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;
			
CAR_V		CLRF PORTB;

			MOVLW 0XE0;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XDF;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XBF;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XDF;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XE0;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;

CAR_X		CLRF PORTB;

			MOVLW 0X9C;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XEB;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XF7;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XEB;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X9C;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;

CAR_Y		CLRF PORTB;

			MOVLW 0XF8;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XF7;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X8F;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XF7;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XF8;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;

POS_1			CLRF PORTB;

			MOVLW 0XEF;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X95;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XE2;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X95;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XEF;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;

POS_2			CLRF PORTB;

			MOVLW 0XFB;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X95;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XE2;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X95;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XFB;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;

POS_3		CLRF PORTB;

			MOVLW 0XF7;
			MOVWF PORTC;
			MOVLW C0;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X97;
			MOVWF PORTC;			
			MOVLW C1;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XEB;
			MOVWF PORTC;		
			MOVLW C2;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0X97;
			MOVWF PORTC;			
			MOVLW C3;
			MOVWF PORTB;

			CALL retardo;
			CLRF PORTB;

			MOVLW 0XF7;
			MOVWF PORTC;			
			MOVLW C4;
			MOVWF PORTB;

			CALL retardo;
			RETURN;


 END

			









